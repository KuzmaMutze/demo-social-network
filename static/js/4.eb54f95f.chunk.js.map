{"version":3,"sources":["components/Content/Profile/Profile.module.css","components/Content/Content.module.css","components/Content/MyPosts/MyPosts.module.css","components/Content/MyPosts/Post/Post.module.css","components/Content/MyPosts/Post/Post.jsx","components/Content/MyPosts/MyPosts.jsx","components/Content/MyPosts/MyPostsContainer.jsx","components/Content/Profile/ProfileStatusWithHooks.jsx","components/Content/Profile/ProfileDataForm.jsx","components/Content/Profile/Profile.jsx","components/Content/Content.jsx","components/Content/ContentContainer.jsx"],"names":["module","exports","Post","props","className","classes","item","img","src","alt","writing","message","like","href","maxLenghtCreacter15","maxLenghtCreacter","ReduxFormAddPost","reduxForm","form","onSubmit","handleSubmit","Field","textarea","name","placeholder","component","Textarea","validate","required","newPost__button","MyPosts","postElements","postData","map","post","id","wrapper","newPost","values","addPost","addedPostElement","MyPostsContainer","connect","state","contentPage","newPostText","dispatch","addPostActionCreater","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","disableMode","updateStatusProfile","onChange","e","currentTarget","value","onBlur","onClick","autoFocus","statusUpload","ProfileDataReduxForm","profile","isOwner","error","contactsInput","Object","keys","contacts","key","ket","type","submitContacts","ProfileData","goToEditMode","profileDataItems","fullName","aboutMe","contactTitle","contactValue","lookingForAJob","lookingForAJobDescription","editContacts","Contact","Content","Preloader","items","info","photos","large","userPhoto","avatar","upload","target","files","length","savePhoto","formData","saveProfileInfo","then","initialValues","Profile","ContentContainer","userId","this","match","params","authUserId","history","push","getUserProfile","getStatusProfile","refreshProfile","prevProps","prevState","content","React","Component","compose","withRouter","auth","isAuth"],"mappings":"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","file":"static/js/4.eb54f95f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Profile_avatar__2Vy0x\",\"items\":\"Profile_items__3NluD\",\"upload\":\"Profile_upload__2f6Yn\",\"statusUpload\":\"Profile_statusUpload__LzTbZ\",\"editContacts\":\"Profile_editContacts__-2TJb\",\"submitContacts\":\"Profile_submitContacts__TNEKG\",\"contactsInput\":\"Profile_contactsInput__uvOSh\",\"profileDataItems\":\"Profile_profileDataItems__Ct8SW\",\"error\":\"Profile_error__2MDn-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"Content_items__1oVTB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MyPosts_wrapper__3_LDe\",\"newPost\":\"MyPosts_newPost__1Cim_\",\"newPost__button\":\"MyPosts_newPost__button__2bMnS\",\"textarea\":\"MyPosts_textarea__1opuX\",\"items\":\"MyPosts_items__3azYC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Post_img__3zhVy\",\"writing\":\"Post_writing__1yI_e\",\"like\":\"Post_like__3gkzt\",\"item\":\"Post_item__31d64\"};","import classes from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={classes.item}>\r\n                <img className={classes.img} src=\"https://sun9-76.userapi.com/impf/c630116/v630116375/35fa8/amcvlYluyh0.jpg?size=200x200&quality=96&proxy=1&sign=175e9fc3773031e2b291c40e618909af&c_uniq_tag=SAZKXJyRWvPJXt0GEE-L-eNyituxcBrRKYoch7Qb8R4&type=album\" alt=\"ava\"/>\r\n                <span className={classes.writing}>\r\n                    {props.message}\r\n                </span>\r\n                <a className={classes.like} href=\"#\">Like {props.like}</a>\r\n            </div>\r\n        </div>\r\n    )  \r\n}\r\n\r\n\r\nexport default Post;","import classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\"\r\nimport { required, maxLenghtCreacter } from '../../../utils/validators/validatirs';\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\"\r\n\r\n\r\nconst MyPosts = (props) => {\r\n    \r\n    let postElements = props.postData.map( (post) => <Post message={post.message} key={post.id} like={post.like}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.addedPostElement);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.newPost}>\r\n                <ReduxFormAddPost onSubmit={onAddPost}/>\r\n            </div>\r\n            <div className={classes.newPost}>\r\n                <b>My posts</b>\r\n            </div> \r\n            <div>\r\n                {postElements}  \r\n            </div>\r\n        </div>\r\n    ) \r\n}\r\n\r\nconst maxLenghtCreacter15 = maxLenghtCreacter(15);\r\n\r\nconst FormAddPost = (props) => {\r\n    return <div>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field className={classes.textarea} name={\"addedPostElement\"} placeholder=\"Write a new post\" component={Textarea} validate={[required, maxLenghtCreacter15]} />\r\n            <button className={classes.newPost__button}>Send</button>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nconst ReduxFormAddPost = reduxForm({\r\n    form: \"profileAddPostTextArea\"\r\n})(FormAddPost);\r\n\r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport {addPostActionCreater, updatePostTextActionCreater} from '../../../redax/content-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postData: state.contentPage.postData,\r\n        newPostText: state.contentPage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (values) => {\r\n            dispatch(addPostActionCreater(values));\r\n        }\r\n    }\r\n}\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, { useEffect, useState } from \"react\";\r\nimport classes from './Profile.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    \r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const disableMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatusProfile(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {editMode ?\r\n\r\n                <div>\r\n                    Status: <input onChange={onStatusChange} onBlur={disableMode} onClick={disableMode} value={status} autoFocus={true}></input>\r\n                </div>\r\n\r\n                : <div onClick={activateMode} ><b>Status:</b><span className={classes.statusUpload}> {props.status || \"set status\"}</span></div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import { Field, reduxForm } from \"redux-form\"\r\nimport { maxLenghtCreacter, required } from \"../../../utils/validators/validatirs\";\r\nimport classes from './Profile.module.css';\r\n\r\n\r\nlet maxLenghtCreacter15 = maxLenghtCreacter(15);\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, isOwner, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            {error && <div className={classes.error}>{error}</div>}\r\n            <div>\r\n                <b>User Name</b>: <Field className={classes.contactsInput} placeholder=\"Full name\" name=\"fullName\" component=\"input\" />\r\n            </div>\r\n            <div>\r\n                <b>About me:</b> <Field className={classes.contactsInput} placeholder=\"About me\" name=\"aboutMe\" component=\"input\"  />\r\n            </div>\r\n                <br/>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <div ket={key}>\r\n                    <b>{key}:</b> <Field className={classes.contactsInput} name={\"contacts.\" + key} placeholder={key} component=\"input\"/>\r\n                </div>\r\n                })}                \r\n            </div>\r\n                <br/>\r\n            <div><b>I find work:</b>\r\n                <Field className={classes.contactsInput} name=\"lookingForAJob\" type=\"checkbox\" component=\"input\"/>\r\n            </div>\r\n            <div><b>Description:</b> \r\n                <Field className={classes.contactsInput} placeholder=\"Description\" name=\"lookingForAJobDescription\" component=\"input\" />\r\n            </div>\r\n            {isOwner && <button className={classes.submitContacts} >Save</button>}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({form: \"edit-profile\"})(ProfileDataForm)\r\n\r\nexport default ProfileDataReduxForm;","import Preloader from '../../common/Preloader/Preloader';\r\nimport classes from './Profile.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from \"../../../assets/img/1.png\";\r\nimport { useState } from 'react';\r\nimport ProfileDataReduxForm from './ProfileDataForm';\r\nimport React from \"react\";\r\n\r\nconst Content = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length){\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfileInfo(formData).then(() => {\r\n            setEditMode(false);\r\n        })\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <div><img className={classes.img} src=\"https://img.freepik.com/free-photo/empty-sea-beach-background_74190-313.jpg?size=626&ext=jpg&ga=GA1.2.1135173464.1609286400\"></img></div> */}\r\n            \r\n            <div className={classes.items}>\r\n                <div className={classes.info}>\r\n                    <img src={props.profile.photos.large || userPhoto } className={classes.avatar} alt=\"avatar\"/>\r\n                    {props.isOwner && <label className={classes.upload}>Upload avatar<input type=\"file\" onChange={onMainPhotoSelected}/></label>}\r\n                    <ProfileStatusWithHooks status={props.status} updateStatusProfile={props.updateStatusProfile}/>\r\n                </div>\r\n                <div className={classes.info}>\r\n                    {editMode ? <ProfileDataReduxForm onSubmit={onSubmit} initialValues={props.profile} profile={props.profile} isOwner={props.isOwner} goToEditMode={() => {setEditMode(false)}}/> \r\n                    : <ProfileData profile={props.profile} isOwner={props.isOwner} goToEditMode={() => {setEditMode(true)}}/>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )  \r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        <div className={classes.profileDataItems}>\r\n           <b>User Name:</b> {profile.fullName}\r\n        </div>\r\n                <div className={classes.profileDataItems}>\r\n                    <b>About me:</b> {profile.aboutMe}\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                    <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                    return <Contact contactTitle={key} contactValue={profile.contacts[key]}/>\r\n                    })}                \r\n                </div>\r\n                <br/>\r\n                <div>\r\n                    <div className={classes.profileDataItems}><b>I find work:</b> {profile.lookingForAJob ? \"Yes\" : \"No\"}</div>\r\n                    <div className={classes.profileDataItems}><b>Description:</b> {profile.lookingForAJobDescription}</div>\r\n                </div>\r\n                {isOwner && <button className={classes.editContacts} onClick={goToEditMode}>Edit</button>}\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport const Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={classes.profileDataItems}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default Content;","import MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport Profile from './Profile/Profile';\r\nimport classes from './Content.module.css';\r\n\r\n\r\nlet Content = (props) => {\r\n    return (\r\n        <div className={classes.items}>\r\n            <Profile saveProfileInfo={props.saveProfileInfo} savePhoto={props.savePhoto} isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatusProfile={props.updateStatusProfile}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { getUserProfile, getStatusProfile, updateStatusProfile, savePhoto, saveProfileInfo } from \"../../redax/content-reducer\";\r\nimport Content from \"./Content\";\r\nimport classes from './Content.module.css';\r\n\r\n\r\nclass ContentContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authUserId;\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatusProfile(userId);\r\n        this.props.updateStatusProfile(this.props.status);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.content}>\r\n                <Content {...this.props} \r\n                saveProfileInfo={this.props.saveProfileInfo}\r\n                profile={this.props.profile} \r\n                status={this.props.status} \r\n                updateStatusProfile={this.props.updateStatusProfile}\r\n                isOwner={!this.props.match.params.userId}\r\n                savePhoto={this.props.savePhoto}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({ \r\n    profile: state.contentPage.profile,\r\n    status: state.contentPage.status,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {getUserProfile, getStatusProfile, updateStatusProfile, savePhoto, saveProfileInfo}),\r\n    \r\n)(ContentContainer);"],"sourceRoot":""}