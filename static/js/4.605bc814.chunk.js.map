{"version":3,"sources":["components/Content/MyPosts/MyPosts.module.css","components/Content/MyPosts/Post/Post.module.css","components/Content/Profile/Profile.module.css","components/Content/MyPosts/Post/Post.jsx","components/Content/MyPosts/MyPosts.jsx","components/Content/MyPosts/MyPostsContainer.jsx","components/Content/Profile/ProfileStatus.jsx","components/Content/Profile/ProfileStatusWithHooks.jsx","components/Content/Profile/Profile.jsx","components/Content/Content.jsx","components/Content/ContentContainer.jsx"],"names":["module","exports","Post","props","className","classes","item","img","src","alt","writing","message","like","href","maxLenghtCreacter15","maxLenghtCreacter","ReduxFormAddPost","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","validate","required","newPost__button","MyPosts","postElements","postData","map","post","id","wrapper","newPost","values","addPost","addedPostElement","MyPostsContainer","connect","state","contentPage","newPostText","dispatch","addPostActionCreater","React","Component","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","disableMode","updateStatusProfile","onChange","e","currentTarget","value","onBlur","onClick","autoFocus","Content","profile","photos","small","aboutMe","contacts","vk","github","lookingForAJob","lookingForAJobDescription","Preloader","Profile","ContentContainer","userId","this","match","params","authUserId","getUserProfile","getStatusProfile","content","compose","withRouter","auth","isAuth"],"mappings":"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","file":"static/js/4.605bc814.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MyPosts_wrapper__3_LDe\",\"newPost\":\"MyPosts_newPost__1Cim_\",\"newPost__button\":\"MyPosts_newPost__button__2bMnS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Post_img__3zhVy\",\"writing\":\"Post_writing__1yI_e\",\"like\":\"Post_like__3gkzt\",\"item\":\"Post_item__31d64\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Profile_img__1omJg\"};","import classes from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={classes.item}>\r\n                <img className={classes.img} src=\"https://sun9-76.userapi.com/impf/c630116/v630116375/35fa8/amcvlYluyh0.jpg?size=200x200&quality=96&proxy=1&sign=175e9fc3773031e2b291c40e618909af&c_uniq_tag=SAZKXJyRWvPJXt0GEE-L-eNyituxcBrRKYoch7Qb8R4&type=album\" alt=\"ava\"/>\r\n                <span className={classes.writing}>\r\n                    {props.message}\r\n                </span>\r\n                <a className={classes.like} href=\"#\">like {props.like}</a>\r\n            </div>\r\n        </div>\r\n    )  \r\n}\r\n\r\n\r\nexport default Post;","import classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\"\r\nimport { required, maxLenghtCreacter } from '../../../utils/validators/validatirs';\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\"\r\n\r\n\r\nconst MyPosts = (props) => {\r\n    \r\n    let postElements = props.postData.map( (post) => <Post message={post.message} key={post.id} like={post.like}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        debugger\r\n        props.addPost(values.addedPostElement);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            my post\r\n            <div className={classes.newPost}>\r\n                <ReduxFormAddPost onSubmit={onAddPost}/>\r\n            </div>\r\n            <div className={classes.newPost}>\r\n                new post\r\n            </div> \r\n            <div>\r\n                {postElements}  \r\n            </div>\r\n        </div>\r\n    ) \r\n}\r\n\r\nconst maxLenghtCreacter15 = maxLenghtCreacter(15);\r\n\r\nconst FormAddPost = (props) => {\r\n    return <div>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name={\"addedPostElement\"} component={Textarea} validate={[required, maxLenghtCreacter15]} />\r\n            <button className={classes.newPost__button}>Send</button>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nconst ReduxFormAddPost = reduxForm({\r\n    form: \"profileAddPostTextArea\"\r\n})(FormAddPost);\r\n\r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport {addPostActionCreater, updatePostTextActionCreater} from '../../../redax/content-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postData: state.contentPage.postData,\r\n        newPostText: state.contentPage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (values) => {\r\n            debugger\r\n            dispatch(addPostActionCreater(values));\r\n        }\r\n    }\r\n}\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activeteEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    disableEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatusProfile(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        debugger\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        debugger\r\n        if ( prevState.status !== this.props.status ) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                {this.state.editMode ? \r\n\r\n                    <div  onBlur={this.disableEditMode} onDoubleClick={ this.disableEditMode }>\r\n                        <input onChange={this.onStatusChange} autoFocus={true}  value={this.state.status}></input>\r\n                    </div>\r\n\r\n                    : <div onDoubleClick={ this.activeteEditMode }><span>{this.props.status || \"set status\"}</span></div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    \r\n};\r\nexport default ProfileStatus;","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    \r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const disableMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatusProfile(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {editMode ?\r\n\r\n                <div>\r\n                    <input onChange={onStatusChange} onBlur={disableMode} onClick={disableMode} value={status} autoFocus={true}></input>\r\n                </div>\r\n\r\n                : <div onClick={activateMode} ><span>{props.status || \"set status\"}</span></div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import Preloader from '../../common/Preloader/Preloader';\r\nimport classes from './Profile.module.css';\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst Content = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div><img className={classes.img} src=\"https://img.freepik.com/free-photo/empty-sea-beach-background_74190-313.jpg?size=626&ext=jpg&ga=GA1.2.1135173464.1609286400\"></img></div>\r\n            \r\n            <div>\r\n                <img src={props.profile.photos.small} alt=\"\"/>\r\n                <ProfileStatusWithHooks status={props.status} updateStatusProfile={props.updateStatusProfile}/>\r\n                <div>\r\n                    About me: {props.profile.aboutMe}\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                    My Contacts:\r\n                    <div>Vk: {props.profile.contacts.vk}</div>\r\n                    <div>GitHub: {props.profile.contacts.github}</div>\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                    <div>I find work: {props.profile.lookingForAJob === true ? \"Да\" : \"Нет\"}</div>\r\n                    <div>Description: {props.profile.lookingForAJobDescription}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )  \r\n}\r\n\r\nexport default Content;","import MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport Profile from './Profile/Profile';\r\n\r\nlet Content = (props) => {\r\n    return (\r\n        <div>\r\n            <Profile profile={props.profile} status={props.status} updateStatusProfile={props.updateStatusProfile}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { getUserProfile, getStatusProfile, updateStatusProfile } from \"../../redax/content-reducer\";\r\nimport Content from \"./Content\";\r\nimport classes from './Content.module.css';\r\n\r\n\r\nclass ContentContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatusProfile(userId);\r\n        this.props.updateStatusProfile(this.props.status);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.content}>\r\n                <Content {...this.props} profile={this.props.profile} status={this.props.status} updateStatusProfile={this.props.updateStatusProfile}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({ \r\n    profile: state.contentPage.profile,\r\n    status: state.contentPage.status,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {getUserProfile, getStatusProfile, updateStatusProfile}),\r\n    \r\n)(ContentContainer);"],"sourceRoot":""}