{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItem/ItemNavLink/ItemNavLink.module.css","components/Dialogs/Messages/Message/Message.module.css","components/Dialogs/Messages/Messages.module.css","components/Dialogs/DialogsItem/ItemNavLink/ItemNavLink.tsx","components/Dialogs/DialogsItem/DialogsItem.tsx","hoc/withAuthRedirect.tsx","components/Dialogs/DialogsItem/DialogsItemContainer.tsx","components/Dialogs/Messages/Message/Message.tsx","components/Dialogs/Messages/Messages.tsx","components/Dialogs/Messages/MessagesContainer.tsx","components/Dialogs/Dialogs.tsx"],"names":["module","exports","ItemNavLink","props","className","classes","dialogsItem","activeClassName","active","item","to","id","name","DialogsItem","dialogElement","dialogsPage","dialogsData","map","dialogName","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","WrappedComponent","restProps","Message","messages","massage","maxLenghtCreacter20","maxLenghtCreacter","AddMesseageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextField","placeholder","validate","required","type","htmlType","Messages","messagesElements","messagesData","message","values","addMessageActionCreater","newMessageElement","actions","Dialogs","dialogs","DialogsItemContainer","MessagesContainer"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,2B,0CCA5BD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,eAAe,kCAAkC,KAAO,0BAA0B,OAAS,8B,oBCA5JD,EAAOC,QAAU,CAAC,SAAW,0BAA0B,QAAU,2B,oBCAjED,EAAOC,QAAU,CAAC,SAAW,2BAA2B,OAAS,yBAAyB,QAAU,4B,yHCmBrFC,EAZ0B,SAACC,GACtC,OACI,qBAAKC,UAAWC,IAAQC,YAAxB,SACI,8BACI,cAAC,IAAD,CAASC,gBAAiBF,IAAQG,OAAQJ,UAAWC,IAAQI,KAAMC,GAAI,YAAcP,EAAMQ,GAA3F,SACKR,EAAMS,YCMZC,EAX0B,SAACV,GAEtC,IAAIW,EAAgBX,EAAMY,YAAYC,YAAYC,KAAK,SAACC,GAAD,OAAgB,cAAC,EAAD,CAAaN,KAAMM,EAAWN,KAA0BD,GAAIO,EAAWP,IAA9BO,EAAWP,OAE3H,OACI,qBAAKP,UAAWC,IAAQC,YAAxB,SACKQ,K,+BCRTK,EAA6B,SAACC,GAAD,MAA0B,CACvDC,OAAQD,EAAME,KAAKD,S,YCIRE,cACXC,aANkB,SAACJ,GAAD,MAA0B,CAC5CL,YAAaK,EAAML,iBDOhB,SAA+BU,GAUlC,OAFmCD,YAAsDL,EAA4B,KAAlFK,EANnC,SAA4BrB,GAAmC,IACtDkB,EAAwBlB,EAAxBkB,OAAWK,EAD0C,YAC7BvB,EAD6B,YAE1D,OAAe,IAAXkB,EAAyB,cAAC,IAAD,CAAUX,GAAI,WACpC,cAACe,EAAD,eAAsBC,SCRtBH,CAGbV,G,2BCAac,EARsB,SAACxB,GAClC,OACI,qBAAKC,UAAWC,IAAQuB,SAAxB,SACI,qBAAKxB,UAAWC,IAAQwB,QAAxB,SAAkC1B,EAAM0B,a,+DCwBhDC,EAAsBC,YAAkB,IAgBtCC,EAAuBC,YAA2D,CACpFC,KAAM,kBADmBD,EARiG,SAAC9B,GAC3H,OAAO,uBAAMgC,SAAUhC,EAAMiC,aAAtB,UACH,cAACC,EAAA,EAAD,CAAOjC,UAAWC,IAAQuB,SAAUU,UAAWC,YAAW3B,KAAK,oBAAoB4B,YAAY,sBAAsBC,SAAU,CAACC,IAAUZ,KAC1I,cAAC,IAAD,CAAQa,KAAK,UAAUC,SAAS,SAAhC,wBASOC,EApCuB,SAAC1C,GAEnC,IAAI2C,EAAmB3C,EAAM4C,aAAa9B,KAAI,SAAA+B,GAAO,OAAI,cAAC,EAAD,CAASnB,QAASmB,EAAQA,aAInF,OACI,sBAAK5C,UAAWC,IAAQ2C,QAAxB,UACI,8BAAMF,IACN,cAACd,EAAD,CAAsBG,SANb,SAACc,GACd9C,EAAM+C,wBAAwBD,EAAOE,0BCZ9B5B,cACXC,aAJkB,SAACJ,GAAD,MAA0B,CACxC2B,aAAc3B,EAAML,YAAYgC,gBAG7B,eAAsBK,MADlB7B,CAEbsB,GCOaQ,UAVsB,SAAClD,GAElC,OACI,sBAAKC,UAAWC,IAAQiD,QAAxB,UACI,cAACC,EAAD,IACA,cAACC,EAAD","file":"static/js/4.820e898a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__18tsS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItem\":\"ItemNavLink_dialogsItem__3y0x1\",\"dialogs-item\":\"ItemNavLink_dialogs-item__3X9YE\",\"item\":\"ItemNavLink_item__1ef8C\",\"active\":\"ItemNavLink_active__3vDcq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__2uGQq\",\"message\":\"Message_message__1-wiR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__2MkYB\",\"button\":\"Messages_button__Gyc5q\",\"message\":\"Messages_message__3xyGN\"};","import { NavLink } from 'react-router-dom';\r\nimport classes from './ItemNavLink.module.css';\r\n\r\ntype PropsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nconst ItemNavLink: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={classes.dialogsItem}>\r\n            <div>\r\n                <NavLink activeClassName={classes.active} className={classes.item} to={\"/dialogs/\" + props.id}>\r\n                    {props.name}\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemNavLink;","import { initialStateType } from '../../../redux/dialogs-reducer';\r\nimport classes from './DialogsItem.module.css';\r\nimport ItemNavLink from './ItemNavLink/ItemNavLink';\r\n\r\ntype PropsType = {\r\n    dialogsPage: initialStateType\r\n}\r\n\r\nconst DialogsItem: React.FC<PropsType> = (props) => {\r\n    \r\n    let dialogElement = props.dialogsPage.dialogsData.map( (dialogName) => <ItemNavLink name={dialogName.name} key={dialogName.id} id={dialogName.id}/>);\r\n    \r\n    return (\r\n        <div className={classes.dialogsItem}>\r\n            {dialogElement}\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default DialogsItem;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AppStateType } from \"../redux/redux-store\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nexport function withAuthRedirect<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n\r\n    function RedirectComponent (props: WCP & MapStateToPropsType) {\r\n        let {isAuth, ...restProps} = props\r\n        if (isAuth === false) return <Redirect to={\"/login\"}></Redirect>;\r\n        return <WrappedComponent {...restProps as unknown as WCP}/>\r\n    }\r\n\r\n    let ConnectAuthRedirectComponent = connect<MapStateToPropsType, null, WCP, AppStateType>(mapStateToPropsForRedirect, null)(RedirectComponent)\r\n\r\n    return ConnectAuthRedirectComponent;\r\n} ","import { connect } from 'react-redux';\r\nimport DialogsItem from './DialogsItem';\r\nimport { withAuthRedirect } from \"../../../hoc/withAuthRedirect\";\r\nimport { compose } from 'redux';\r\nimport { AppStateType } from '../../../redux/redux-store';\r\n\r\nlet mapStateToProps = (state: AppStateType) => ({\r\n    dialogsPage: state.dialogsPage\r\n})\r\n\r\n// JSX element type 'DialogsItemContainer' does not have any construct or call signatures. (add <React.ComponentType>)\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps),\r\n    withAuthRedirect\r\n)(DialogsItem);","import classes from './Message.module.css';\r\n\r\ntype PropsType = {\r\n    massage: string\r\n}\r\n\r\nconst Message: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={classes.messages}>\r\n            <div className={classes.massage}>{props.massage}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import Message from \"./Message/Message\";\r\nimport classes from \"./Messages.module.css\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\"\r\nimport {Input} from \"../../common/FormsControls/FormsControls\"\r\nimport { required, maxLenghtCreacter } from '../../../utils/validators/validatirs';\r\nimport { MessagesDataType } from \"../../../redux/dialogs-reducer\";\r\nimport { Button } from \"antd\";\r\nimport {\r\n    TextField,\r\n    // @ts-ignore\r\n  } from 'redux-form-antd'\r\n\r\ntype PropsType = {\r\n    messagesData: Array<MessagesDataType>\r\n    addMessageActionCreater: (newMessageElement: string) => void\r\n}\r\n\r\nconst Messages: React.FC<PropsType> = (props) => {\r\n\r\n    let messagesElements = props.messagesData.map(message => <Message massage={message.message}/>);\r\n    let addMessage = (values : {newMessageElement: string}) => {\r\n        props.addMessageActionCreater(values.newMessageElement);\r\n    };\r\n    return (\r\n        <div className={classes.message}>\r\n            <div>{messagesElements}</div>\r\n            <AddMesseageFormRedux onSubmit={addMessage}/>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n// form and type\r\nlet maxLenghtCreacter20 = maxLenghtCreacter(20);\r\n\r\ntype AddMessageFormValueType = {\r\n    newMessageElement: string\r\n}\r\ntype AddMessageFormOwnProps = {}\r\n\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<AddMessageFormValueType, AddMessageFormOwnProps> & AddMessageFormOwnProps> = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <Field className={classes.messages} component={TextField} name=\"newMessageElement\" placeholder=\"Enter your messeage\" validate={[required, maxLenghtCreacter20]}/>\r\n        <Button type=\"primary\" htmlType=\"submit\">Send</Button>\r\n    </form>\r\n}\r\n\r\n// wrapper redux-form\r\nconst AddMesseageFormRedux = reduxForm<AddMessageFormValueType, AddMessageFormOwnProps>({\r\n    form: \"addMessageForm\"\r\n})(AddMessageForm)\r\n\r\nexport default Messages; ","import {actions} from \"../../../redux/dialogs-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport Messages from \"./Messages\";\r\nimport { compose } from \"redux\";\r\nimport { AppStateType } from \"../../../redux/redux-store\";\r\n\r\nlet mapStateToProps = (state: AppStateType) => ({\r\n        messagesData: state.dialogsPage.messagesData,   \r\n})\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {...actions})\r\n)(Messages);","import classes from './Dialogs.module.css';\r\nimport DialogsItemContainer from './DialogsItem/DialogsItemContainer';\r\nimport MessagesContainer from './Messages/MessagesContainer';\r\n\r\ntype PropsType = {\r\n\r\n}\r\n\r\nconst Dialogs: React.FC<PropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <DialogsItemContainer/>\r\n            <MessagesContainer/>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Dialogs;"],"sourceRoot":""}